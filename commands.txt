GIT STAGING COMMAND - git add <file name> NOTE : if you use "." instead of file name it will stage all the modification
GIT COMMITING COMMAND -git commit <file name> -m "<message of your change>"
git restore --staged <file name> - will remove changes from staging

STASHING :- 
git stash - will stash all the staged changes so that the history is not saved and we can bring them back once we need
git stash pop - will bring back all the stashed changes back on staging
git stash clear - will clear all the stash. we cannot get those changes again



touch <file name> - will create the file with the given file name
ls - will show all the content in files except hidden ones
ls -a - will show all the hidden files
:x

vi <file name> will add content into the file
cat <file name> will show the content into the file
:i to insert something into existing file
rm -rf <file name> will removes the file
git log command will show all the commits
git reset <hashid from the git log> will reset to the given status of the project
:x to exit vi 


ADDING REPOSITERIES IN OUR GIT BASH
command - git remote add origin <URL of the repositary>
git push origin master - command to push repository
git remote set-url <REMOTE-NAME> <NEW-URL> - to set new remote and url
git remote rename <old-name> <new-name> - rename remote name
git clone <URL of repositery> - will download repository
git remote add upstream <URL> - will add url of repository from which we have forked
git checkout <branch name> - will switch to that branchs
git push origin <branch name> - will push the branch to the fork in your repositery so that you can create pull request
NOTE :- YOU CAN ONLY CREATE ONE PULL REQUEST FOR A BRANCH, (THE COMMITS WILL AUTOMATICALLY REFLECT ON THE BRANCH YOU CREATED)